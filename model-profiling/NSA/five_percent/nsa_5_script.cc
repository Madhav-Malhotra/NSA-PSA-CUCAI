/**
 * @author: Akira Yoshiyama
 * @date: 28/02/2024
 * @description: Positive Selection Algorithm for Network Attack Detection with 100 detectors
*/

/**
 * Params to be hardcoded by user:
 *      Class Detectors: num_detectors, num_features, array_ capacity, array_
 *      float* scaler(): mean, std_dev, mean length, std_dev length
 *      bool psa(): radius
 *      int main(): dummy attack vector length
*/

/** 
 * @brief       Interface for detectors array
*/
class Detectors {
    public:
        Detectors();
        ~Detectors();
        float get(short, short);
        unsigned short get_num_dtrs() {
            return num_detectors;
        }
        unsigned short get_num_feats() {
            return num_features;
        }

    private:
        // Harcoded
        unsigned short num_detectors{100};
        unsigned short num_features{5};
        // num_detectors * num_features
        float detectorsArray_[500]{0.3195784359518059, 3.281639520389846, 0.9032368335369332, 18.720897035399673, 4.506815153599158, 9.470908265759256, 6.651015422647035, 9.170333509465861, 3.3171003260468948, 13.931473659085833, 8.106236893978183, 1.789925752575953, 8.87963795581897, 10.244234228713966, 34.96399060223347, 3.3011691259306977, 14.678694378813288, 1.7017305398425455, 3.5370811185096436, 39.168183461667816, 7.221446420131791, 19.935740960931785, 0.595569279786888, 16.530913213306874, 24.561235410299346, 6.338952437502768, 7.667698579978408, 13.142972505170778, 22.49228104750407, 42.855470851223224, 8.710141032963543, 8.00570520611325, 1.8887261736732548, 4.72154413238537, 34.62205664407636, 3.1599835300767123, 12.492596995729611, 10.752178190665743, 12.020830373578876, 19.90828054616431, 4.803389959109952, 7.420248127768318, 4.3271034704933315, 8.359297688607114, 25.229557913776095, 4.76589694859664, 17.279244736331666, 14.913353640294885, 10.713817238332302, 17.938284441556227, 3.9159430735813943, 16.82441449871724, 0.19403745948281315, 4.5438227977629335, 25.287640004662453, 4.179517424197388, 16.619476071819122, 4.912273476124328, 24.617763791489093, 27.067195662377575, 7.842265218338691, 14.10558685888147, 14.579217554877976, 14.724143003612916, 12.42911345869404, 1.114279276569337, 6.234591657872816, 9.899941816203281, 8.719104792426455, 43.20122037674426, 7.693757345629239, 19.446584328529582, 13.131458556151616, 14.762342073327313, 45.635064334375315, 9.23665324893934, 17.53665179787502, 8.915747052006694, 3.649876175430133, 37.88908037577034, 7.478267766761302, 7.4570669906851235, 10.40632822961435, 25.854001887731712, 5.356734593593099, 8.595977789934327, 13.360369465266627, 4.213331985449078, 17.781456549888247, 47.74754001507769, 3.293413896425968, 1.6046485515380389, 9.658370754360908, 19.692540503578922, 10.480729921096673, 3.6155468037911214, 6.08735525990251, 14.864613346463416, 12.443549619827369, 22.92467476211359, 4.616654607806194, 4.700500137955324, 0.7793830393094487, 4.9152561532215735, 12.32931658709829, 6.167143738732271, 3.8981220976966298, 6.050548328095897, 15.871748204081033, 7.480770240841094, 8.73398580493457, 13.195801639961314, 0.3595344310168595, 6.459501839689259, 0.5799358770991283, 6.4969525551704255, 16.21276125685069, 11.81133020510762, 25.912219249040657, 35.64585744127218, 3.5318737323396854, 4.607073772174011, 6.9398748822162375, 16.99744730398277, 26.544131777484807, 1.3676673485930588, 6.804783742934516, 6.752003588898376, 6.2136483318926, 1.2701575600762551, 2.8104539378271007, 2.744438296694845, 14.43150768612741, 4.076929243021806, 25.715381636172616, 1.2334782046483244, 1.9253185572772848, 5.731669804658851, 17.919879821906918, 13.650473425920062, 8.269075489813346, 0.05447236479716373, 6.301449485586364, 20.281842376195307, 43.54993283509539, 0.8504844962564679, 15.280734058207942, 2.830471749516868, 24.64451430542065, 6.286553486764188, 3.3560510202075746, 20.63845801463279, 4.511073498442305, 8.08015081813206, 10.324501640948187, 4.322919243905323, 6.962222255231941, 3.3323039756669233, 23.645691040540036, 46.62930455193814, 4.06628415703945, 3.1215477063227977, 10.27687546839724, 9.422300715457625, 3.5326165022527265, 9.104919275195432, 18.852050991195604, 3.108863139304449, 8.29949233563617, 46.81627035006435, 6.721375191727225, 17.071829591563624, 14.466562508938239, 22.890077184312535, 24.653621120131984, 4.099904240282903, 20.352647414207162, 11.79374454084629, 17.013767685926766, 6.290760954274323, 9.565386316940968, 20.395853897799995, 1.0924377729006813, 20.498749563494673, 13.971864450399828, 8.857482964242525, 4.862118850480335, 4.142095224146352, 0.5149389635383339, 47.93153761796369, 0.07786391933453071, 16.959166690097202, 13.159845164339302, 14.056440024680267, 18.335034540628715, 5.321699730293432, 19.991541961059408, 3.418932179964012, 17.149598744695158, 22.873011151947207, 5.463139747808427, 17.624764284757774, 8.596029906531504, 23.096378262978586, 13.293568551674964, 4.581395025298261, 6.581898513820656, 14.72359178059649, 12.076187892875533, 33.307263882791766, 7.5959316543536435, 0.7640918754511946, 1.7098344536970513, 3.4203615169062096, 21.800229876653457, 5.563388552903938, 7.763143468425003, 0.4438109599067275, 6.444908139776522, 21.94450932524525, 0.8778683343836048, 8.96020812362126, 14.708455299076926, 23.148220127701062, 45.328206710300684, 6.432044426611718, 8.172685687150736, 5.932374347060621, 17.651291022453, 13.29230951686248, 6.992120324543803, 2.692691051613467, 13.384808583486652, 19.446538102073028, 48.68050306665394, 0.8258590360734281, 10.7816062656921, 0.5185498853413256, 5.054496926080791, 6.468370621806832, 0.08248894876125389, 16.62209332224499, 3.4696381008937696, 11.569385673700438, 8.659370183056462, 7.885843888712098, 2.328373714477357, 15.111133206365768, 4.7564173447407345, 48.10503423926419, 4.832901289033331, 8.209567872140891, 6.353260670185744, 6.13206593244328, 11.290542813467503, 3.9831757062335296, 19.914397290546685, 8.894387391514725, 1.6691737279558927, 39.08974246027344, 6.5768890033670555, 5.6974169201795295, 1.822322924484726, 19.419275440008864, 35.275442047079906, 5.8647468276492365, 1.8400096437397204, 1.557033142859199, 17.65574548887682, 36.30834416563557, 5.46134451536581, 20.886181814161155, 3.801401263041484, 10.312764821932845, 29.500609020407364, 4.520346547483684, 5.510608143306104, 3.1004036615385773, 6.521165798434268, 13.794176234068667, 8.56146160763559, 3.0107103678357126, 0.16025087019558573, 18.459171420771654, 34.028018836492265, 3.808948386636983, 10.487157274318607, 12.769833226208407, 1.3049763325190986, 37.37971149829007, 8.835800692951063, 1.9305152088824347, 5.011798447573211, 0.534035273334726, 0.574280378991586, 8.420095432703446, 2.140833845990012, 4.656408880513468, 19.483410430363378, 35.40597811344746, 2.5026623633605714, 15.923631056072386, 0.42316464915860164, 21.316376404962135, 42.33431908273775, 6.903152406777976, 14.852631041850758, 4.68515400834003, 15.131105206025905, 45.43889864561462, 6.206042470101607, 6.316019391586173, 4.6514986802873795, 25.493764940570877, 21.86395883401569, 5.691205550501624, 17.732918852815956, 9.170692710302633, 21.674518310784723, 14.481505158031558, 0.24225877333421805, 7.111198586305465, 2.968289927146309, 13.733771835379715, 11.133929003701468, 2.871574957896016, 4.090055498647362, 1.2245562181537746, 19.413641595888585, 47.199648798048834, 4.758065355846824, 12.290679882335997, 6.1433567553448265, 9.36386729094559, 7.78518952514535, 8.438009081690215, 2.5332215494558223, 9.725048232106875, 24.206890871739073, 39.6971018918749, 0.7913153875675966, 12.615687479866857, 8.061360264597244, 20.90345410335143, 7.680333139375056, 4.40015218859071, 7.608922869087167, 14.525044435841044, 16.848472669758415, 41.817424750369675, 7.789393944217295, 7.696842115271377, 2.170009648729117, 21.47062165454617, 11.053598945671379, 2.088208810358316, 8.573703548461726, 9.78176638987145, 1.9813102618755307, 1.528286919743558, 5.355998849615371, 2.3809025936371118, 8.250155744307415, 24.37652209222156, 13.581015239882605, 6.512671506463685, 20.84362955053653, 0.3283553739166896, 25.147918433718747, 2.7477755160617487, 6.920543551694133, 16.101887399202756, 4.034217601992543, 8.522574612074187, 25.960754489022808, 1.833376725885361, 8.48407241590904, 3.2349301525265104, 5.390683612951751, 19.176225806234342, 9.060437163007856, 15.09201970267452, 4.407237538710589, 22.6001730641943, 30.703624464034043, 5.383772820423431, 1.3145684149494146, 9.78362851860242, 8.09842931577941, 32.07993606927814, 0.9194879729950195, 6.227971611657077, 10.432126258378586, 22.094941646022335, 24.524584901391282, 7.769352624788211, 9.714243562126114, 1.8729682776930519, 5.151885888416542, 42.25652520728222, 7.9985157331474035, 2.7772468310593905, 9.37265248303777, 14.436197913719642, 11.488893553404619, 4.578635880266617, 15.559562108669539, 13.221282153994924, 5.440498803718056, 30.847783721812128, 8.895402862794537, 8.11637536312893, 4.21063218776233, 11.899306019091998, 8.383807854643791, 2.1821681143980722, 17.84034067085815, 10.462730415226094, 22.78288018061585, 13.06958251651907, 9.590845934715341, 1.3592978043707644, 10.71270660217557, 12.233623571369142, 18.268420221441755, 3.234617614653077, 9.598930242329622, 2.7097315491842977, 24.653917715454302, 9.824412770930829, 5.1126918070582645, 6.1228824011501, 10.011861839810976, 7.633713902371699, 1.7203505348812187, 1.1267922883981687, 18.143381788515104, 13.967448243017525, 2.266962872608042, 5.315516534981939, 5.271657958345032, 0.6769396384477806, 5.710375213199325, 4.150764205617063, 29.427683755728673, 5.887598311428493, 14.017868739696391, 13.321121393831278, 12.600449516680508, 31.430956472048013, 9.660433511058105, 12.336175712577104, 12.702927593364013, 6.5478642326521745, 39.552215583759725, 3.448091339947213, 4.410181004572259, 11.977106606353244, 8.005310150988766, 16.969242892870252, 3.4817302434105217, 9.169980978460924, 12.90254253123186, 6.68211397530166, 23.24822216832066, 3.8022966166470145, 8.200529708017832, 6.822914679857736, 7.384054847154628, 0.2611268469018217, 2.461415268490056, 9.99458167268971, 0.5736254791067457, 25.78526834693157, 14.61307697105638, 6.751290159169947, 6.044226757632804, 12.363887870127284, 23.18159102088102, 37.792074979202795, 9.316273952905037, 5.072607955903679, 2.509671560125005, 4.350746409627399, 34.551147175314945, 4.493775771993285, 14.245562357567957, 10.160314072304379, 9.423687834454848, 33.069168774743304, 4.155291497017188, 8.77529429865648, 9.553736239445602, 18.873356530009914, 23.584042749866658, 2.5770049753045337, 17.055274780194644, 7.300468192574448, 4.900897492361659, 1.1096000531096433};
};

/**
 * @brief               Empty constructor for Detectors class.
*/
Detectors::Detectors() {
}

/**
 * @brief               Destructor for Detectors class. Sets num_detectors = num_features = 0.
*/
Detectors::~Detectors() {
    num_detectors = 0;
    num_features = 0;
}

/**
 * @brief               Read one feature value from one detector.
 * @param detector      Index of detector. Range: 0 to num_detectors - 1.
 * @param feature       Index of feature. Range: 0 to num_features - 1.
 * @returns             Float of feature
*/
float Detectors::get(short detector, short feature) {
    return detectorsArray_[detector*num_features + feature];
}

/**
 * @brief               Scales all features of incoming network request. Modelled after sklearn StandardScaler().
 * @param request       Array of features of incoming network request.
 * @param cap           Capacity of network request feature array.
 * @returns             Scaled features array
*/
float* scaler(float request[], short cap) {

    // Hardcoded Mean and Standard Deviation
    // Get from StandardScaler() in Kaggle notebook
    double mean[5]{8.3186720e+07, 7.6719203e+04, 1.3120520e+01, 3.8336689e+01, 1.8190652e+02};
    double std_dev[5]{2.9054373e+14, 2.1180917e+11, 7.4384621e+01, 1.0480629e+05, 2.7420531e+05};

    for (short i{0}; i < cap; i++) {
        request[i] = (request[i] - ((float) mean[i]))/ ((float) std_dev[i]);
    }

    return request;
}


/**
 * @brief              Absolute value function
*/
float abs(float x) {
    if (x < 0) {
        return -x;
    }
    return x;
}

/**
 * @brief               Predicts if cyberattack or benign
 * @param attack        Feature array from incoming network request
 * @param D             Class holding detectors
 * @returns             True if Attack
*/
bool psa(float attack[], Detectors D) {
    float r{3.5}; //Hardcoded radius value
    float dist{0.0};
    
    float* scaled_attack = scaler(attack, D.get_num_feats());
    for (unsigned int d{0}; d < D.get_num_dtrs(); d++) {
        dist = 0.0;
        for (short f{0}; f < D.get_num_feats(); f++) {
            dist += abs(scaled_attack[f] - D.get(d, f));
        }
        if (dist < r) {
            return false;
        }
    }

    return true;
}

/**
 * @brief               Tests PSA on dummy attack vector
*/
int main() {

    while (true) {
        Detectors D;    
    
        float dummy_attack_vector[5];
        for (short i{0}; i < D.get_num_feats(); i++) {
            dummy_attack_vector[i] = (float) i;
        }

        bool is_attack = psa(dummy_attack_vector, D);

    }

    return 0;
}